% Options for packages loaded elsewhere
\PassOptionsToPackage{unicode}{hyperref}
\PassOptionsToPackage{hyphens}{url}
%
\documentclass[
]{article}
\usepackage{amsmath,amssymb}
\usepackage{lmodern}
\usepackage{iftex}
\ifPDFTeX
  \usepackage[T1]{fontenc}
  \usepackage[utf8]{inputenc}
  \usepackage{textcomp} % provide euro and other symbols
\else % if luatex or xetex
  \usepackage{unicode-math}
  \defaultfontfeatures{Scale=MatchLowercase}
  \defaultfontfeatures[\rmfamily]{Ligatures=TeX,Scale=1}
\fi
% Use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
\IfFileExists{microtype.sty}{% use microtype if available
  \usepackage[]{microtype}
  \UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}
\makeatletter
\@ifundefined{KOMAClassName}{% if non-KOMA class
  \IfFileExists{parskip.sty}{%
    \usepackage{parskip}
  }{% else
    \setlength{\parindent}{0pt}
    \setlength{\parskip}{6pt plus 2pt minus 1pt}}
}{% if KOMA class
  \KOMAoptions{parskip=half}}
\makeatother
\usepackage{xcolor}
\usepackage{graphicx}
\makeatletter
\def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth\else\Gin@nat@width\fi}
\def\maxheight{\ifdim\Gin@nat@height>\textheight\textheight\else\Gin@nat@height\fi}
\makeatother
% Scale images if necessary, so that they will not overflow the page
% margins by default, and it is still possible to overwrite the defaults
% using explicit options in \includegraphics[width, height, ...]{}
\setkeys{Gin}{width=\maxwidth,height=\maxheight,keepaspectratio}
% Set default figure placement to htbp
\makeatletter
\def\fps@figure{htbp}
\makeatother
\setlength{\emergencystretch}{3em} % prevent overfull lines
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
\setcounter{secnumdepth}{-\maxdimen} % remove section numbering
\ifLuaTeX
  \usepackage{selnolig}  % disable illegal ligatures
\fi
\IfFileExists{bookmark.sty}{\usepackage{bookmark}}{\usepackage{hyperref}}
\IfFileExists{xurl.sty}{\usepackage{xurl}}{} % add URL line breaks if available
\urlstyle{same} % disable monospaced font for URLs
\hypersetup{
  hidelinks,
  pdfcreator={LaTeX via pandoc}}

\author{}
\date{}

\begin{document}

Question1:

a)b)

\textbf{Classes:}

The prupose of a class is to specify a classification and the Features
of objects and to define their structure and behavior. The structure and
behavior of objects is characterized by classes, and classes can act as
a namespaces for other classes defined within their scope. A class is
shown using the Classifier symbol : the default notation for a
classifier is a solid outlined rectangel with the classifiers name, with
compartments seperated by horizontal lines below the name, the name
should be centered and in boldface, and should begin with a uppercase
letter.If the class is abstract it is written in italics. Compartments
can be supressed and then seperator lines aren\textquotesingle t drawn
and no inference may be drawn from the presence or abscence of the
elements in the supressed compartments. A Class has four mandatory
compartments: attributes operations receptions and internal structure
(and these must appear in this order). If the class represents a meta
class may be extended with
\textless\textless Metaclass\textgreater\textgreater{} before its name.
And a class can have optional compartments that all classifiers can
have. Any compartment that contains features may show these grouped
under the strings: private pulic protected representing their
visibility. A compartments name may be shown or hidden it should be
centered and start with lowercase letters, it can contain spaces but no
punctuation. A class with the property isActive = true can be shown by a
class box with an extra vertical line on each side. Any keywords
including stereotype names can also be written centered in plain face in
a pair of "\textless\textless" above the name of the class name if there
are multiple keywords/stereotypes then each enclosed in a seperate pair
of \textless\textless{} and listed one after the other or listed all in
the same pair of \textless\textless{} sperated be commas.

(Source: \url{https://www.omg.org/spec/UML/2.5.1/PDF/} Page 237 + 101 +
102)

\textbf{Objects: (Instancespecifications?)}

InstanceSpecifications represent the possible or actual existence of an
instance in a modeled system and completely or partially describe these.
InstaceSpecifications represent instances of Classifiers and Classes are
Classifieres in a modled system. InstanceSpecifications are depicted
like classifiers with the exception that in the place where the
Classifier name is written, the name of the instance followed by a colon
followed by the classifier names if any (and if there are multiple then
these are sperated by commas) is written and underlined. Names are
Optional for Classifiers and InstanceSpecifications, the standard name
for an unammed Classifier or anonymous Instance Specification is an
underlined colon, If the Instance Specification has Value specifcations
these are represented with: value name followed by "=" followed by a
Valuespecification in the enclosing shape. Structural features if any
are shown with structural feature name followed by = followed by a value
specification. There aren\textquotesingle t any manadatory parts except
maybe that the box with the name need to be drawn.

(Source: \url{https://www.omg.org/spec/UML/2.5.1/PDF/} Page 127 + 128)

\textbf{Attributes(Properties?):}

Properties Represent atributes of classifiers, a memberEnde of an
Association or both, they also represent attributes of Classes since
they are classifiers. Properties are represented as a string consisting
of the visibility followed by / followed by the name : followed by the
property type followed be the multiplicity type in "{[}" brackets,
followed by "=" followed be the default value followed by any
propmodifiers in "\{" brackets. In Classifiers the type visibility ,
default , multiplicity and proptery string may be supressed from being
displayed even if the values are in the model. Properties can be shown
in columns rather than continuous strings. And an attribute may be shown
using the association notation where the hollow or filled diamond is
shown at the end of the tail. There aren\textquotesingle t really any
mandatory

(Source: \url{https://www.omg.org/spec/UML/2.5.1/PDF/} Page 113 + 114)

\textbf{Operations:}

An Operation is a Behaviorial Feature of a Class, DataType or Interface.
Operation Elements specify the name type, Parameters and Constraints for
When These Operations are Invoked (Executed) on instance of their
Featuring Classifiers. An Operation is a Feature of a Class and
determines what it\textquotesingle s objects can do and how. Operations
are shown with text stings in the form
of:{[}\textless visibility\textgreater{]} \textless name\textgreater{}
`(` {[}\textless parameter-list\textgreater{]} `)' {[}`:'
{[}\textless return-type\textgreater{]} {[}`{[}`
\textless multiplicity-range\textgreater{} `{]}'{]} {[}`\{`
\textless oper-property\textgreater{} {[}`,'
\textless oper-property\textgreater{]}* `\}'{]}{]}. Operations probably
must be shown in this form it seems everything is optional except the
name + "()".

(Source: \url{https://www.omg.org/spec/UML/2.5.1/PDF/} Page )

\textbf{Assoziations:}

Associations specify semantic relationships between typed instances. An
Association delares that there can be links between instances whose
types conform to or implement the associated types.Associations
specifies semantic relationships between typed instances so in other
words it describes relationships between Objects and Objects of
Classes.Associations Can be drawn as a diamond with a solid line for
each association connection of the diamond to the classifier that is
that ends type. A binary Association is drawn as a solid line connecting
two Classifiers or a solid line connecting a singel classfier to itself.
At least a line required. The Association\textquotesingle s name can be
shown as a name string near the Association symbol a slash in front of
the Associations\textquotesingle s name means it has is being derived. A
property string may be placed near the Association symbol. On Binary
Associations a solid triangular arrowhead can be drawn next to or in
place of the name pointing in the direction of the line indicates that
the object the arrow is pointing away from should be read first.
Generalizations between Associations can be shwon with a generalization
arrow between the association symbols. An Association end is the
connection between the line of the association and the icon of the
Classifier a name string can be placed here to show the name of the
Association end. Other notations can also be placed near the end of the
line like a multiplicity a visibility symbol or a prop modifier. open
arrow head on the end indicates it is navigatable ownership of
association can be shown with a filled dot at the end of the line.
Qualifiers if there are any are mandatory parts so must be shown,
qualifieres are small boxes at the end of Associations with attributes
drawn within.

(Source: \url{https://www.omg.org/spec/UML/2.5.1/PDF/} Page 126 - 128)

\textbf{Multiplizitity:}

A Multiplicity Element is an Element that can be instantiated to
represent a collection of values depending on the type of element.
Associations can have multiplicities.The notation is specified for each
type of Multiplicity element but in general a notation will be shown as
a text string containing the bounds of the multiplicity and a notation
for showing the optional ordering and uniqueness specifications.It can
also be displayed as a symbol. A multiplicity can be shown in the format
\textless lower-bound\textgreater..\textless upper-bound\textgreater{}
.Just at least Some notation about a bound is required if there is
one.Further Optionale Components depend on the specific Multiplicity
element.

(Source: \url{https://www.omg.org/spec/UML/2.5.1/PDF/} Page 33 - 35)

\textbf{Generalization (Generalization Sets?):}

Generatlization Elementes depict a relationship in which a (child)
element is based on another (parent) element. This is used to indicate
that for example: in class diagrams child classes recieve all attributes
operations and relationships defined in their parent class. A
generalization Relationship is represented as a solid line with a hollow
arrowhead that points from the child element to the parent element
placed at the end of the line at the parent element. At least this is
required it seems. The lines can be named to designate Generalization
Sets with names written near the line, two lines to the same parent can
be joined so that they are part of the same generalisation set.

(Sources:

\url{https://www.ibm.com/docs/en/rational-soft-arch/9.7.0?topic=diagrams-generalization-relationships}
)

\textbf{Komposition(Components):}

A Composition Association Relationship represents a relation ship where
An element is comprised of another, and that the life time of the part
classifier is dependent on that of the whole classifier. Classifiers can
be composed of other classifiers so Classes can be composed of other
classes so they would have such a relationship depicted between them. A
composition association relationship depicted with a solid line with and
a filled diamond at the association/end of the line which is connted to
the whole/composite classifier.

(Soruce:
\url{https://www.ibm.com/docs/en/rational-soft-arch/9.7.0?topic=diagrams-composition-association-relationships},
\url{https://www.omg.org/spec/UML/2.5.1/PDF/} Page 209)

\textbf{Aggregation:}

Used to show a relationship between classifiers where one is part or
subordinate to the other. Can be used with classes to show this type of
relationship. The representatio of an aggregation is: a solid line with
an unfilled diamond at the association end which is connected to the
classifier that represents the aggregate.

(Soruce:
\url{https://www.ibm.com/docs/en/rational-soft-arch/9.7.0?topic=diagrams-aggregation-relationships})

Aufgabe 3-2:

\includegraphics[width=6in,height=4.34375in]{vertopal_89b9c59d0ebb4e5980bc9c49a3adffe9/media/image1.wmf}

Aufgabe 3-3:

a) Objekt: ( 15.4 Object node???) InstanceSpecification 9.8, 9.9.9

Generalisierung: Generalization 9.7 , 9.9.7

Attribut: Property 9.9.17

Operation: Operation 9.6, 9.9.11

Komposition \& Aggregation:?

Schnittstelle: Interface 10.4 , 10.5.5

Implementierung:Realization 7.8.14

Assoziation: Association 11.5

b)

Methodenaufruf : CallEvent 13.4.3

Interner Übergang: Transiton but with kind set to internal 14.5.11.5 ,
14.5.12 (TransitionKind), 14.5.12.3 (values)...

Externer Übergang: Transition 14.5.11

Aufgabe 3-4:

a) A sequenz diagram is a diagram that describes the interaction of a
user with software over time and is useful for refining the model in the
requirments analysis and to explain the behavior of the software to
stakeholders.

b) keine?

c) The lifelines of objects are displayed as vertical lines and time:
the start of the interation is at the top the end at the bottom?

d) The Function call of a Method is represented as a horizontal arrow
with the method signature on it?

e) Yes, The Messages are the Method calls these point with arrows to
what the results of their execution are.

f) The relation consist of the fact that the sender object has created
the reciever object.

g) You can deduce this from the fact that there is only one line and
that only one specific order of events is depicted.

h)

\href{https://www.omg.org/spec/UML/2.5.1/PDF/}{https://www.omg.org/spec/UML/2.5.1/PDF/\includegraphics[width=4.44792in,height=3.52083in]{vertopal_89b9c59d0ebb4e5980bc9c49a3adffe9/media/image2.wmf}}

\end{document}
